services:
  app:
    container_name: ${APP_CONTAINER_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${APP_PORT:-3000}:3000'
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:dev
    depends_on:
      - db
    env_file:
      - .env.development
    restart: unless-stopped
  db:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4
    container_name: ${PGADMIN_CONTAINER_NAME}
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  redis:
    image: redis:7-alpine
    container_name: luizalabs-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
  redisinsight:
    image: redis/redisinsight:latest
    container_name: luizalabs-redisinsight
    ports:
      - '5540:5540'
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  pg_data:
  pgadmin_data:
  redis_data:
